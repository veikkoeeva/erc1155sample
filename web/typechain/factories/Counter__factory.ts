/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "CountedTo",
    type: "event",
  },
  {
    inputs: [],
    name: "countDown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "countUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610310806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630bd8599e146100465780635fcbd5b614610060578063a87d942c14610068575b600080fd5b61004e610070565b60405190815260200160405180910390f35b61004e610140565b60005461004e565b60006100a66040518060400160405280601081526020016f636f756e7455703a20636f756e74203d60801b8152506000546101d0565b600080546100b5906001610295565b905060005481116101005760405162461bcd60e51b815260206004820152601060248201526f55696e74323536206f766572666c6f7760801b60448201526064015b60405180910390fd5b60008190556040518181527fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e679060200160405180910390a1505060005490565b600061017860405180604001604052806012815260200171636f756e74446f776e3a20636f756e74203d60701b8152506000546101d0565b6000600160005461018991906102ad565b905060005481106101005760405162461bcd60e51b815260206004820152601160248201527055696e7432353620756e646572666c6f7760781b60448201526064016100f7565b61021582826040516024016101e692919061023a565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610219565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040815260008351806040840152815b81811015610267576020818701810151606086840101520161024a565b818111156102785782606083860101525b50602083019390935250601f91909101601f191601606001919050565b600082198211156102a8576102a86102c4565b500190565b6000828210156102bf576102bf6102c4565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209975dc8c2d71b73e2de54b0dd05c8ddb70454053a24aa7441a02c54e6e2127f064736f6c63430008040033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
